# Generated by Django 3.1.13 on 2022-12-19 21:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote_type', models.CharField(max_length=20)),
                ('incoterm', models.CharField(choices=[('EX', 'EX Works'), ('FOB', 'FOB'), ('CFR', 'CFR'), ('DAP', 'DAP'), ('OTHER', 'Other')], default='EX', max_length=30)),
                ('other_vas', models.CharField(blank=True, max_length=300, null=True)),
                ('county_origin', django_countries.fields.CountryField(default='US', max_length=2)),
                ('county_destination', django_countries.fields.CountryField(default='KE', max_length=2)),
                ('cargo_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('goods_category', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=30)),
                ('special_delivery', models.CharField(blank=True, max_length=300, null=True)),
                ('quote_serial_no', models.CharField(default='000', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Quote_App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quote_type', models.CharField(max_length=200)),
                ('incoterm', models.CharField(max_length=300)),
                ('country_origin', models.CharField(max_length=100)),
                ('country_destination', models.CharField(max_length=100)),
                ('quote_serial_no', models.CharField(default='000', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('review', 'Review'), ('approved_admin', 'Approved_Admin'), ('approved_client', 'Approved_Client'), ('rejected_client', 'Rejected_Client'), ('rejected', 'Rejected')], default='pending', max_length=30)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuoteType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Air', 'Air'), ('Sea', 'Sea'), ('Road', 'Road'), ('Warehouse', 'Warehouse')], default='Air', max_length=30)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Taxes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('percentage', models.IntegerField(default=0)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('value', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quote_Air',
            fields=[
                ('quote_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='quote.quote')),
                ('cargo_weight', models.FloatField()),
                ('cargo_dimension_length', models.CharField(max_length=100)),
                ('cargo_dimension_width', models.CharField(max_length=100)),
                ('cargo_dimension_height', models.CharField(max_length=100)),
                ('collection_address', models.CharField(blank=True, max_length=300, null=True)),
            ],
            bases=('quote.quote',),
        ),
        migrations.CreateModel(
            name='Quote_Road',
            fields=[
                ('quote_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='quote.quote')),
                ('truck_type', models.CharField(choices=[('Van', 'Van'), ('3T Truck', '3T Truck'), ('5T Truck', '5T Truck'), ('7T Truck', '7T Truck'), ('15T Truck', '15T Truck'), ('28T Truck', '28T Truck')], max_length=30)),
                ('cargo_weight', models.FloatField()),
                ('cargo_dimension_length', models.FloatField()),
                ('cargo_dimension_width', models.FloatField()),
                ('cargo_dimension_height', models.FloatField()),
                ('collection_address', models.CharField(blank=True, max_length=300, null=True)),
                ('delivery_address', models.CharField(blank=True, max_length=300, null=True)),
            ],
            bases=('quote.quote',),
        ),
        migrations.CreateModel(
            name='Quote_Sea',
            fields=[
                ('quote_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='quote.quote')),
                ('container_size', models.FloatField(max_length=100)),
                ('container_dimension_length', models.FloatField()),
                ('container_dimension_width', models.FloatField()),
                ('container_dimension_height', models.FloatField()),
            ],
            bases=('quote.quote',),
        ),
        migrations.CreateModel(
            name='Staff_Pricing_Quotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_name', models.CharField(max_length=1000)),
                ('buying_origin_haulage', models.IntegerField(blank=True, null=True)),
                ('selling_origin_haulage', models.IntegerField(blank=True, null=True)),
                ('margin_origin_haulage', models.IntegerField(blank=True, null=True)),
                ('buying_customs_documentation', models.IntegerField(blank=True, null=True)),
                ('selling_customs_documentation', models.IntegerField(blank=True, null=True)),
                ('margin_customs_documentation', models.IntegerField(blank=True, null=True)),
                ('buying_origin_terminal_handling', models.IntegerField(blank=True, null=True)),
                ('selling_origin_terminal_handling', models.IntegerField(blank=True, null=True)),
                ('margin_origin_terminal_handling', models.IntegerField(blank=True, null=True)),
                ('buying_airport_charges', models.IntegerField(blank=True, null=True)),
                ('selling_airport_charges', models.IntegerField(blank=True, null=True)),
                ('margin_airport_charges', models.IntegerField(blank=True, null=True)),
                ('buying_other_charges_A', models.IntegerField(blank=True, null=True)),
                ('selling_other_charges_A', models.IntegerField(blank=True, null=True)),
                ('margin_other_charges_A', models.IntegerField(blank=True, null=True)),
                ('buying_total_A', models.IntegerField(blank=True, default=0, null=True)),
                ('selling_total_A', models.IntegerField(blank=True, default=0, null=True)),
                ('margin_total_A', models.IntegerField(blank=True, default=0, null=True)),
                ('buying_freight_cost', models.IntegerField(blank=True, null=True)),
                ('selling_freight_cost', models.IntegerField(blank=True, null=True)),
                ('margin_freight_cost', models.IntegerField(blank=True, null=True)),
                ('buying_other_freight_charges', models.IntegerField(blank=True, null=True)),
                ('selling_other_freight_charges', models.IntegerField(blank=True, null=True)),
                ('margin_other_freight_charges', models.IntegerField(blank=True, null=True)),
                ('buying_total_B', models.IntegerField(blank=True, default=0, null=True)),
                ('selling_total_B', models.IntegerField(blank=True, default=0, null=True)),
                ('margin_total_B', models.IntegerField(blank=True, default=0, null=True)),
                ('buying_terminal_handling', models.IntegerField(blank=True, null=True)),
                ('selling_terminal_handling', models.IntegerField(blank=True, null=True)),
                ('margin_terminal_handling', models.IntegerField(blank=True, null=True)),
                ('buying_agency_fee', models.IntegerField(blank=True, null=True)),
                ('selling_agency_fee', models.IntegerField(blank=True, null=True)),
                ('margin_agency_fee', models.IntegerField(blank=True, null=True)),
                ('buying_transport_delivery', models.IntegerField(blank=True, null=True)),
                ('selling_transport_delivery', models.IntegerField(blank=True, null=True)),
                ('margin_transport_delivery', models.IntegerField(blank=True, null=True)),
                ('buying_other_destination_charges', models.IntegerField(blank=True, null=True)),
                ('selling_other_destination_charges', models.IntegerField(blank=True, null=True)),
                ('margin_other_destination_charges', models.IntegerField(blank=True, null=True)),
                ('buying_total_C', models.IntegerField(blank=True, default=0, null=True)),
                ('selling_total_C', models.IntegerField(blank=True, default=0, null=True)),
                ('margin_total_C', models.IntegerField(blank=True, default=0, null=True)),
                ('hs_code_bp', models.CharField(blank=True, max_length=100, null=True)),
                ('hs_code_sp', models.IntegerField(blank=True, null=True)),
                ('hs_code_margin', models.IntegerField(blank=True, null=True)),
                ('fob_value_bp', models.CharField(blank=True, max_length=100, null=True)),
                ('fob_value_sp', models.IntegerField(blank=True, null=True)),
                ('fob_value_margin', models.IntegerField(blank=True, null=True)),
                ('freight_charges_bp', models.IntegerField(blank=True, null=True)),
                ('freight_charges_sp', models.IntegerField(blank=True, null=True)),
                ('freight_charges_margin', models.IntegerField(blank=True, null=True)),
                ('insurance_bp', models.IntegerField(blank=True, null=True)),
                ('insurance_sp', models.IntegerField(blank=True, null=True)),
                ('insurance_margin', models.IntegerField(blank=True, null=True)),
                ('customs_value_bp', models.IntegerField(blank=True, null=True)),
                ('customs_value_sp', models.IntegerField(blank=True, null=True)),
                ('customs_value_margin', models.IntegerField(blank=True, null=True)),
                ('buying_total_D', models.IntegerField(blank=True, default=0, null=True)),
                ('selling_total_D', models.IntegerField(blank=True, default=0, null=True)),
                ('margin_total_D', models.IntegerField(blank=True, default=0, null=True)),
                ('import_duty_principal', models.CharField(blank=True, max_length=1000, null=True)),
                ('import_duty', models.IntegerField(blank=True, default=0, null=True)),
                ('excise_duty_principal', models.CharField(blank=True, max_length=1000, null=True)),
                ('excise_duty', models.IntegerField(blank=True, default=0, null=True)),
                ('vat_principal', models.CharField(blank=True, max_length=1000, null=True)),
                ('vat', models.IntegerField(blank=True, default=0, null=True)),
                ('railway_levy_principal', models.CharField(blank=True, max_length=1000, null=True)),
                ('railway_levy', models.IntegerField(blank=True, default=0, null=True)),
                ('idf_fee_principal', models.CharField(blank=True, max_length=1000, null=True)),
                ('idf_fee', models.IntegerField(blank=True, default=0, null=True)),
                ('levies_principal', models.CharField(blank=True, max_length=1000, null=True)),
                ('levies', models.IntegerField(blank=True, default=0, null=True)),
                ('total_tax', models.IntegerField(blank=True, default=0, null=True)),
                ('grand_total_bp', models.IntegerField(blank=True, default=0, null=True)),
                ('grand_total_sp', models.IntegerField(blank=True, default=0, null=True)),
                ('grand_total_margin', models.IntegerField(blank=True, default=0, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('review', 'Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quote.quote_app')),
            ],
        ),
        migrations.CreateModel(
            name='Quote_Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo_description', models.CharField(max_length=1000)),
                ('cargo_weight', models.FloatField()),
                ('cargo_dimension_length', models.FloatField()),
                ('cargo_dimension_width', models.FloatField()),
                ('cargo_dimension_height', models.FloatField()),
                ('special_delivery', models.CharField(blank=True, max_length=300, null=True)),
                ('quote_serial_no', models.CharField(default='000', max_length=30)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
